# NL

define WG    = 51820
define SQUID = 8888

add element inet user hijack { tcp . domain: domain, tcp . domain-s: domain-s, udp . domain: domain, udp . ntp: ntp }

add element inet user internal_ports { udp . ntp }
add element inet user external_ports { tcp . http, udp . $WG }

add element inet user external_ifs { m5_assert([ENV_WAN_IF]) }
add element inet user internal_ifs { wg, m5_join([,], m5_or([ENV_LAN_IFS], [])) }

table inet user {
  chain prerouting {
    iifname != @external_ifs ip  daddr != @local_v4 meta l4proto { tcp } th dport http   tproxy ip  to :$SQUID
    iifname != @external_ifs ip  daddr != @local_v4 meta l4proto { tcp } th dport ftp    tproxy ip  to :$SQUID
    iifname != @external_ifs ip  daddr != @local_v4 meta l4proto { tcp } th dport gopher tproxy ip  to :$SQUID
    iifname != @external_ifs ip6 daddr != @local_v6 meta l4proto { tcp } th dport http   tproxy ip6 to :$SQUID
    iifname != @external_ifs ip6 daddr != @local_v6 meta l4proto { tcp } th dport ftp    tproxy ip6 to :$SQUID
    iifname != @external_ifs ip6 daddr != @local_v6 meta l4proto { tcp } th dport gopher tproxy ip6 to :$SQUID
  }
}

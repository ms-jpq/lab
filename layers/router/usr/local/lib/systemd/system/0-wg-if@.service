[Unit]
Description      = Wireguard server -- %I

Before           = nginx.service

Requires         = 0-wg-private-key.service
After            = 0-wg-private-key.service

BindsTo          = 0-ip-alloc@%i.service
After            = 0-ip-alloc@%i.service

Wants            = dnsmasq@%i.service

[Service]
Type             = oneshot
RemainAfterExit  = yes
Restart          = on-failure

ProtectSystem    = strict
PrivateTmp       = yes
RuntimeDirectory = local/wireguard/dnsmasq.d
ReadWritePaths   = %t/systemd %t/local/wireguard %T %V %C/local %S/local

EnvironmentFile  = %t/local/ip/%I.env
EnvironmentFile  = -/usr/local/etc/default/%I.wg.env

Environment      = IFACE=%I
Environment      = DOMAIN=%I
Environment      = NETDEV=%t/systemd/network/0-%I.netdev
Environment      = NETWORK=%t/systemd/network/0-%I.network
Environment      = ENV_WG_SERVER_NAME=
Environment      = ENV_WG_PEERS=

Environment      = DNSMASQD=%t/local/wireguard/dnsmasq.d/%I.hosts
Environment      = STATE=%S/local/wireguard
Environment      = CACHE=%C/local/wireguard

ExecStart        = /usr/local/libexec/envsubst2.sh /usr/local/opt/wireguard/@.network ${NETWORK}
ExecStart        = /usr/local/opt/wireguard/libexec/alloc.sh ${IFACE} ${DOMAIN} ${NETDEV} ${DNSMASQD} ${CACHE} ${STATE} ${ENV_WG_SERVER_NAME} ${ENV_WG_PEERS}
ExecStart        = networkctl reload
ExecStopPost     = rm -v --recursive --force -- ${NETDEV} ${NETWORK}
ExecStopPost     = -networkctl delete -- ${IFACE}

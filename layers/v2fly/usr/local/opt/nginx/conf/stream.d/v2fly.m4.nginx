# m4_include([layers/v2fly/usr/local/opt/v2fly/vars.m4.yml])
map $ssl_server_name $tcp_upstream {
  hostnames ;
  # m4_pushdef([PORT], PORT_BEGIN)
  # m5_for([PROTOCOL], [
  # m5_for([TRANSPORT], [
  # m4_pushdef([TRANS], [m4_regexp(TRANSPORT, [\(^[^@]+\)], [\1])])
  # m4_pushdef([XPORT], [m4_regexp(TRANSPORT, [\([^@]+$\)], [\1])])
  # m4_ifelse(XPORT, [tcp], [
  # m4_pushdef([SALTED], m4_substr(m4_esyscmd(b3sum --no-names --length 8 <<<'PROTOCOL-TRANS-ENV_V2R_SEED'), 0, 16))
  SALTED.*  127.0.0.53:PORT; # PROTOCOL-TRANS
  # ])
  # m4_pushdef([PORT], m4_incr(PORT))
  # ], TRANSPORTS)
  # ], PROTOCOLS)
  default   tcp_upstream_fallback;
}

map $server_addr $udp_upstream {
  # m4_pushdef([PORT], PORT_BEGIN)
  # m5_for([PROTOCOL], [
  # m5_for([TRANSPORT], [
  # m4_pushdef([TRANS], [m4_regexp(TRANSPORT, [\(^[^@]+\)], [\1])])
  # m4_pushdef([XPORT], [m4_regexp(TRANSPORT, [\([^@]+$\)], [\1])])
  # m4_ifelse(XPORT, [udp], [
  # m4_pushdef([B3], m4_esyscmd(b3sum --no-names --length 8 <<<'PROTOCOL-TRANS'))
  # m4_pushdef([SUFFIX], m4_substr(B3, 0, 4):m4_substr(B3, 4, 4):m4_substr(B3, 8, 4):m4_substr(B3, 12, 4))
  ~SUFFIX$ 127.0.0.53:PORT; # PROTOCOL-TRANS
  # ])
  # m4_pushdef([PORT], m4_incr(PORT))
  # ], TRANSPORTS)
  # ], PROTOCOLS)
  default  udp_upstream_fallback;
}
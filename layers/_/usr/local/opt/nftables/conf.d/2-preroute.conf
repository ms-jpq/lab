# NL

table inet user {
  map tproxy_v4 {
    type  inet_proto . inet_service : ipv4_addr . inet_service
    flags interval
  }

  map tproxy_v6 {
    type  inet_proto . inet_service : ipv6_addr . inet_service
    flags interval
  }

  map hijack {
    type  inet_proto . inet_service : inet_service
    flags interval
  }

  map fw_v4 {
    type  inet_proto . inet_service : ipv4_addr . inet_service
    # TODO: when nft is fixed: ,timeout
    flags interval
  }

  map fw_v6 {
    type  inet_proto . inet_service : ipv6_addr . inet_service
    flags interval
  }

  chain prerouting {
    iifname != @external_ifs meta l4proto { tcp, udp } redirect to meta l4proto . th dport map @hijack comment "Hijack IPv4"
    iifname != @external_ifs meta l4proto { tcp, udp } redirect to meta l4proto . th dport map @hijack comment "Hijack IPv6"

    iifname @external_ifs meta nfproto ipv4 dnat to meta l4proto . th dport map @fw_v4 comment "Forward IPv4"
    iifname @external_ifs meta nfproto ipv6 dnat to meta l4proto . th dport map @fw_v6 comment "Forward IPv6"
  }

  chain prerouting {
    # TODO: not possible with current tproxy syntax
    # iifname != @external_ifs ip  daddr != @local_v4 meta l4proto { tcp, udp } tproxy ip  to meta l4proto . th dport map @tproxy_v4 comment "Tproxy hijack IPv4"
    # iifname != @external_ifs ip6 daddr != @local_v6 meta l4proto { tcp, udp } tproxy ip6 to meta l4proto . th dport map @tproxy_v6 comment "Tproxy hijack IPv6"
  }
}

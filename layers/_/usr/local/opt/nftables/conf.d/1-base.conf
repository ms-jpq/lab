# NL

define ACCEPT = 0xb00b0000

table inet user {}
delete table inet user

table inet user {
  set local_v4 {
    type  ipv4_addr
    flags interval
    elements = { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 }
  }

  set local_v6 {
    type  ipv6_addr
    flags interval
    elements = { fd00::/8 }
  }

  set external_ifs {
    type  ifname
    # flags interval
    # TODO: nft 1.0.3+ supports wildcards
  }

  set internal_ifs {
    type  ifname
  }

  chain prerouting {
    type nat hook prerouting priority dstnat
  }

  chain input {
    type filter hook input priority filter

    ct state     { established, related } mark set $ACCEPT comment "Allow established traffic"
    ct status    { dnat }                 mark set $ACCEPT comment "Allow DNATed traffic"
    meta l4proto { icmp, icmpv6 }         mark set $ACCEPT comment "Allow ICMP, ICMPv6"
  }

  chain noinput {
    type filter hook input priority filter + 1
    policy drop

    mark & $ACCEPT == $ACCEPT accept
    counter reject with icmpx type admin-prohibited
  }

  chain forward {
    type filter hook forward priority filter

    ct state     { established, related } mark set $ACCEPT comment "Allow established traffic"
    meta l4proto { icmp, icmpv6 }         mark set $ACCEPT comment "Allow ICMP, ICMPv6"
    iifname @internal_ifs ct status { dnat } mark set $ACCEPT comment "Allow DNATed traffic"
  }

  chain noforward {
    type filter hook forward priority filter + 1
    policy drop

    mark & $ACCEPT == $ACCEPT accept
    counter reject with icmpx type admin-prohibited
  }

  chain output {
    type filter hook output priority filter
  }

  chain mangle {
    type filter hook postrouting priority mangle
  }

  chain postrouting {
    type nat hook postrouting priority srcnat
  }
}

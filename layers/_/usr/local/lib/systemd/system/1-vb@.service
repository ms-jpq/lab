[Unit]
Description          = Virtual Bridge -- %I
StopWhenUnneeded     = yes
CollectMode          = inactive

BindsTo              = 1-ip-alloc@%i.service
After                = 1-ip-alloc@%i.service

BindsTo              = systemd-networkd.service
After                = systemd-networkd.service

Wants                = dnsmasq@%i.service

BindsTo              = nftables.service
ReloadPropagatedFrom = nftables.service
After                = nftables.service

[Service]
Type                 = oneshot
RemainAfterExit      = yes

ProtectSystem        = strict
ProtectHome          = yes
PrivateTmp           = yes
ReadWritePaths       = %t/systemd %T

EnvironmentFile      = %t/local/ip/%I.env
EnvironmentFile      = -/usr/local/etc/default/%I.%J.env

Environment          = NETWORKD_DHCP=yes
Environment          = IFACE=%I
Environment          = DOMAIN=%I
Environment          = NETDEV=%t/systemd/network/0-%I.netdev
Environment          = NETWORK=%t/systemd/network/0-%I.network

ExecStartPre         = /usr/local/libexec/envsubst2.sh /usr/local/opt/network/@.netdev ${NETDEV}
ExecStartPre         = /usr/local/libexec/envsubst2.sh /usr/local/opt/network/@.network ${NETWORK}
ExecStartPre         = chown -- systemd-network:systemd-network ${NETDEV} ${NETWORK}

ExecStart            = networkctl reload
ExecReload           = networkctl reconfigure -- ${IFACE}

ExecStart            = nft -- 'add element inet user internal_ifs     { ${IFACE} }; add element inet user masq_v4    { ${IPV4_NET} }; add element inet user masq_v6    { ${IPV6_NET} }'
ExecReload           = nft -- 'add element inet user internal_ifs     { ${IFACE} }; add element inet user masq_v4    { ${IPV4_NET} }; add element inet user masq_v6    { ${IPV6_NET} }'
ExecStop             = -nft -- 'delete element inet user internal_ifs { ${IFACE} }; delete element inet user masq_v4 { ${IPV4_NET} }; delete element inet user masq_v6 { ${IPV6_NET} };'

ExecStop             = -networkctl delete -- ${IFACE}
ExecStopPost         = rm -v --recursive --force -- ${NETDEV} ${NETWORK}

---
services:
  srv:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    userns_mode: auto
    restart: unless-stopped
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:5601
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-k.loadbalancer.server.port=5601
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-k.rule=HostRegexp(`elastic.{.+}.{.+$$}`)
    environment:
      SERVER_NAME:
      ELASTICSEARCH_SSL_VERIFICATIONMODE: none
    networks:
      - default
      - traefik

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    userns_mode: auto
    restart: unless-stopped
    mem_limit: 512M
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:9200/_cluster/health
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms256M -Xmx256M
    ports:
      - 9200:9200

  log:
    image: docker.elastic.co/logstash/logstash:${VERSION}
    userns_mode: auto
    restart: unless-stopped
    depends_on:
      elasticsearch:
        condition: service_healthy
    mem_limit: 512M
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:9600
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-l.loadbalancer.server.port=5044
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-l.rule=HostRegexp(`log.{.+}.{.+$$}`)
    environment:
      LS_JAVA_OPTS: -Xms256M -Xmx256M

networks:
  traefik:
    external: true
    name: traefik

---
services:
  srv:
    image: docker.io/library/adminer:latest
    userns_mode: auto
    restart: on-failure
    depends_on:
      pg:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=HostRegexp(`pg.{.+}.{.+$$}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${COMPOSE_PROJECT_NAME}
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}.redirectRegex.regex=(^https?://[^/]+/$$)
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}.redirectRegex.replacement=$${1}?pgsql=${COMPOSE_PROJECT_NAME}-pg&username=${COMPOSE_PROJECT_NAME}&db=${COMPOSE_PROJECT_NAME}
    networks:
      - default
      - traefik

  pg:
    image: docker.io/library/postgres:latest
    userns_mode: auto
    healthcheck:
      test:
        - CMD
        - pg_isready
        - --username
        - ${COMPOSE_PROJECT_NAME}
        - --dbname
        - ${COMPOSE_PROJECT_NAME}
    environment:
      POSTGRES_DB: ${COMPOSE_PROJECT_NAME}
      POSTGRES_PASSWORD: ${COMPOSE_PROJECT_NAME}
      POSTGRES_USER: ${COMPOSE_PROJECT_NAME}
    ports:
      - 127.0.0.53:55432:5432

networks:
  traefik:
    external: true
    name: traefik

---
services:
  srv:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    userns_mode: auto
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:5601
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-k.loadbalancer.server.port=5601
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-k.rule=HostRegexp(`^elastic\.`)
    environment:
      SERVER_NAME:
      ELASTICSEARCH_SSL_VERIFICATIONMODE: none

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    userns_mode: auto
    restart: always
    mem_limit: 512M
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:9200/_cluster/health
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-e.loadbalancer.server.port=9200
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-e.rule=HostRegexp(`^es\.`)
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    volumes:
      - data:/usr/share/elasticsearch/data

  log:
    image: docker.elastic.co/logstash/logstash:${VERSION}
    userns_mode: auto
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    mem_limit: 512M
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --no-progress-meter
        - --max-time
        - "1"
        - --
        - 127.0.0.1:9600/_node/jvm
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-l.loadbalancer.server.port=9600
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-l.rule=HostRegexp(`^log\.`)

volumes:
  data:

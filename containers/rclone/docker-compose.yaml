---
services:
  s3:
    image: docker.io/andrewgaul/s3proxy:latest
    userns_mode: auto
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=HostRegexp(`^s3\.`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}
    environment:
      S3PROXY_CREDENTIAL:
      S3PROXY_IDENTITY:
    volumes:
      - /var/lib/local/rclone:/data

  dav:
    image: docker.io/rclone/rclone:latest
    userns_mode: auto
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --spider
        - --timeout
        - "1"
        - --
        - localhost:8080
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}2.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}2.rule=HostRegexp(`^minio\.`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}2.service=${COMPOSE_PROJECT_NAME}2
    command:
      - serve
      - webdav
      - --config=/dev/null
      - --dir-cache-time=0
      - --poll-interval=0
      - --addr=:8080
      - --
      - /data
    volumes:
      - /var/lib/local/rclone:/data

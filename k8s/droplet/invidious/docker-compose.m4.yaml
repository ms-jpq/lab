---
x-k8s:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      labels:
        io.kompose.service: &companion invidious-companion
      name: *companion
      namespace: ${COMPOSE_PROJECT_NAME}
    spec:
      rules:
        - host: youtube.m5_assert([ENV_DOMAIN])
          http:
            paths:
              - backend:
                  service:
                    name: *companion
                    port:
                      number: 8282
                path: /companion
                pathType: Prefix

services:
  invidious:
    image: quay.io/invidious/invidious:${TAG}
    labels:
      kompose.service.expose: youtube.${DOMAIN}
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - -O/dev/null
        - --timeout
        - "1"
        - --
        - 127.0.0.1:3000/preferences
    environment:
      INVIDIOUS_PORT: &port 3000
    ports:
      - *port
    volumes:
      - ./conf.yml:/invidious/config/config.yml:ro

  # invidious-sig-helper:
  #   image: quay.io/invidious/inv-sig-helper:latest
  #   init: true
  #   environment:
  #     RUST_LOG: info
  #   command:
  #     - --tcp
  #     - 0.0.0.0:12999
  #   ports:
  #     - 12999

  invidious-companion:
    image: quay.io/invidious/invidious-companion:latest
    environment:
      PROXY: socks5://proxy.kompsed-hostproxy.svc.cluster.local:1080
      SERVER_SECRET_KEY:
    ports:
      - 8282
    volumes:
      - cache:/var/tmp

  pg:
    image: docker.io/library/postgres:latest
    environment:
      POSTGRES_DB: ${COMPOSE_PROJECT_NAME}
      POSTGRES_PASSWORD: ${COMPOSE_PROJECT_NAME}
      POSTGRES_USER: ${COMPOSE_PROJECT_NAME}
    healthcheck:
      test:
        - CMD
        - pg_isready
        - --username
        - ${COMPOSE_PROJECT_NAME}
        - --dbname
        - ${COMPOSE_PROJECT_NAME}
    ports:
      - 5432
    volumes:
      - data:/var/lib/postgresql

volumes:
  cache:
  data:
